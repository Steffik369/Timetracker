
<Table @ref="table"
       TItem="JobItem"
       DataSource="@timetrackerViewModel.JobItems"
       Total="total"
       @bind-PageIndex="pageIndex"
       @bind-PageSize="pageSize">
    <Column @bind-Field="@context.Title" Sortable />
    <Column @bind-Field="@context.Type" Sortable />
    <Column @bind-Field="@context.Start" Format="yyyy-MM-dd HH:mm:ss" Sortable />
    <Column @bind-Field="@context.End" Format="yyyy-MM-dd HH:mm:ss" Sortable />
    @*<Column Title="Total time" Field="@context.ElapsedTime" />*@
    <ActionColumn>
        <Space>
            <SpaceItem><Button OnClick="() => timetrackerViewModel.JobItem = context" Disabled="@timetrackerViewModel.IsBusy">Edit</Button></SpaceItem>
            <SpaceItem><Button Danger OnClick="() => timetrackerViewModel.DeleteJobItem(context)" Disabled="@timetrackerViewModel.IsBusy">Delete</Button></SpaceItem>
        </Space>
    </ActionColumn>
</Table>

<div>
    Total: @total | Page size:
    <select class="form-select" aria-label="Default select example" @bind="pageSize">
        @foreach (var type in numberOfPages)
        {
            <option>@type</option>
        }
    </select>
</div>




@code {

    [CascadingParameter(Name = "timetrackerViewModel")]
    ITimetrackerViewModel? timetrackerViewModel { get; set; }

    ITable table;

    int pageIndex = 1;
    int pageSize = 10;
    int total = 0;

    List<int> numberOfPages = new List<int>() { 5, 10, 20, 50, 100 };

    protected override async Task OnInitializedAsync()
    {
        total = timetrackerViewModel.JobItems.Count();
    }

}

<style>
    .form-select {
        width: 50px;
    }
</style>